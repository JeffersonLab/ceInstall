#!/bin/zsh -i
# shell has to be interactive to load modules

# on fedora and ubuntu installation dir is different for modules
# also checking for container env setup in /app
[[ -f /usr/share/Modules/init/zsh ]] && . /usr/share/Modules/init/zsh
[[ -f /usr/share/modules/init/zsh ]] && . /usr/share/modules/init/zsh

. "$(dirname "$(readlink -f "$0")")"/functions.zsh

if [[ $# -eq 1 ]]; then
	gemc_version=$1
else
	# error
	echo " > ERROR: No gemc version given. Exiting."
	exit 1
fi

echo " > Installing gemc version $gemc_version"
echo

module purge
module load sim_system
module load gemc/$gemc_version
if [[ $? -ne 0 ]]; then
	echo " > ERROR: module load gemc/$gemc_version failed. Probably $gemc_version is not supported. Exiting."
	exit 1
fi
echo

echo " > Checking / Installing missing dependencies for gemc version $gemc_version"
[ "$(moduleTestResult     geant4    $G4_VERSION)"       -eq 0 ] && echo " > geant4 $G4_VERSION is installed" || install_geant4 $G4_VERSION
[ "$(moduleTestResult     ccdb      $CCDB_VERSION)"     -eq 0 ] && echo " > ccdb $CCDB_VERSION is installed" || install_ccdb

# GEMC 2 line
if [[ $gemc_version == 2* ]] || [[ $gemc_version == 4* ]] || [[ $gemc_version == 5* ]] || [[ $gemc_version == "dev" ]]; then

	[ "$(moduleTestResult .scons_bm $SCONS_BM_VERSION)" -eq 0 ] && echo " > scons_bm is installed" || install_scons_bm

	if [[ $gemc_version == 2* ]] || [[ $gemc_version == 4* ]]; then
		[ "$(moduleTestResult .evio $EVIO_VERSION)" -eq 0 ] && echo " > evio is installed" || install_evio
	fi
	if [[ $gemc_version == 2* ]] || [[ $gemc_version == 5* ]] || [[ $gemc_version == "dev" ]]; then
		[ "$(moduleTestResult hipo $HIPO_VERSION)" -eq 0 ] && echo " > hipo is installed" || install_hipo
		[ "$(moduleTestResult .cmag $CMAG_VERSION)" -eq 0 ] && echo " > cmag is installed" || install_cmag
	fi
	[ "$(moduleTestResult .mlibrary $MLIBRARY_VERSION)" -eq 0 ] && echo " > mlibrary is installed" || install_mlibrary
	if [[ ! -f "$FIELD_DIR/Full_transsolenoid_x321_y161_z321_April2024" ]]; then
		echo " > Field map does not exist. Installing field map."
		install_fields
	fi
	echo " > Field maps are installed."
# GEMC 3 line
else
	[ "$(moduleTestResult .scig $SCIG_VERSION)" -eq 0 ] && echo " > scig is installed" || install_scig
fi

[ "$(moduleTestResult gemc   $gemc_version)"     -eq 0 ] && echo " > gemc is installed"      || install_gemc_source $gemc_version

module test gemc/$gemc_version
exit $?
