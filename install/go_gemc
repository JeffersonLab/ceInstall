#!/bin/csh -f

# Additional settings at the top of get_coptions
set getCoptions = $JLAB_ROOT/$JLAB_VERSION/install/get_coptions 

# Options, Screen Log, Warnings
set name     = gemc
set release  = `$getCoptions release`
set repo     = `$getCoptions repo`/gemc
set version  = $GEMC_VERSION
set filename =  gemc"-"$GEMC_VERSION".tar.gz"
set opt      = `$getCoptions copt`
set blog     = `$getCoptions logFile gemc`
set blogS    = `$getCoptions logFileS gemc`

# Write options on screen
$getCoptions log $name $version $filename $release $opt

if($1 == "src"|| $1 == "make" || $1 == "3.0") goto $1

# Source Build
src:
	# start message
	$getCoptions installLog $name $version

	# creating build and source dirs
	$getCoptions removeAndCreate $JLAB_SOFTWARE/gemc/$GEMC_VERSION

	# unpacking inside source
	cd $JLAB_SOFTWARE/gemc
	$getCoptions getAndUnpackTo $repo $filename $GEMC_VERSION
if($1 == "src") exit

# make
make:


	# log start of compilation
	$getCoptions logStart $blog $blogS

	# start showing log on xterm
	$getCoptions xLog gemc

	# Adding LIBRARY="shared" in case gemc is built as a library
	cd $GEMC
	scons $opt OPT=1 LIBRARY="shared" >>  $blog

	# log end of compilation, total time
	$getCoptions logEnd  $blog
	$getCoptions logTime $blog

if($1 == "make") exit


3.0:

	# start message
	$getCoptions installLog $name $GEMC_VERSION
	rm -rf $JLAB_SOFTWARE/gemc/$GEMC_VERSION
	mkdir -p $JLAB_SOFTWARE/gemc
	cd $JLAB_SOFTWARE/gemc
	git clone http://github.com/gemc/src.git $GEMC_VERSION

	# log start of compilation
	$getCoptions logStart $blog $blogS

	# start showing log on xterm
	$getCoptions xLog gemc

	cd $JLAB_SOFTWARE/gemc/$GEMC_VERSION
	scons $opt OPT=1 >>  $blog

	# adding python api
	git clone http://github.com/gemc/sci-g

	# copying plugins to GPLUGIN_PATH (here)
	cp ../../glibrary/1.0/lib/gstrea* .

	# copying dosimeter data to GPLUGIN_PATH (here)
	cp -r ../../glibrary/1.0/gdynamicDigitization/dosimeterData .



if($1 == "3.0") exit



# Done
echo " > Done."
echo



