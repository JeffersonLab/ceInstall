#!/bin/zsh -i

install_g4() {
	install_geant4_data
	install_geant4_source
}

# shell has to be interactive to load modules

# on fedora and ubuntu installation dir is different for modules
# also checking for container env setup in /app
[[ -f /usr/share/Modules/init/zsh ]] && . /usr/share/Modules/init/zsh
[[ -f /usr/share/modules/init/zsh ]] && . /usr/share/modules/init/zsh
[[ -f /app/localSetup.sh ]]          && . /app/localSetup.sh

.  "$(dirname "$(readlink -f "$0")")"/functions.zsh

if [[ $# -eq 1 ]]; then
	geant4_version=$1
else
	# error
	echo " > ERROR: No geant4 version given. Exiting."
	exit 1
fi

echo " > geant4_version: $geant4_version"
echo

module purge
module load geant4/$geant4_version

echo
echo " > Checking / Installing missing dependencies for geant4 version $geant4_version"
[ "$(moduleTestResult .clhep   $CLHEP_VERSION)"   -eq 0 ] && echo " > clhep is installed"   || install_clhep
[ "$(moduleTestResult .xercesc $XERCESC_VERSION)" -eq 0 ] && echo " > xercesc is installed" || install_xercesc
[ "$(moduleTestResult .qt      $QT_VERSION)"      -eq 0 ] && echo " > qt is installed"      || copy_qt
echo " > Done with dependencies, now checking / installing geant4 data"
if [ ! -d "$G4NEUTRONHPDATA" ] ||
	[ ! -d "$G4LEDATA" ] ||
	[ ! -d "$G4LEVELGAMMADATA" ] ||
	[ ! -d "$G4RADIOACTIVEDATA" ] ||
	[ ! -d "$G4PARTICLEXSDATA" ] ||
	[ ! -d "$G4PIIDATA" ] ||
	[ ! -d "$G4REALSURFACEDATA" ] ||
	[ ! -d "$G4SAIDXSDATA" ] ||
	[ ! -d "$G4ABLADATA" ] ||
	[ ! -d "$G4INCLDATA" ] ||
	[ ! -d "$G4ENSDFSTATEDATA" ]; then
	install_geant4_data
fi

[ ! -d "$G4ENSDFSTATEDATA" ] && install_geant4_data
echo " > Done with geant4 data,  now fetching and compiling source code"
[ "$(moduleTestResult geant4   $G4_VERSION)" -eq 0 ] && echo " > Done with geant4 installation scripts" || install_geant4_source

echo " > Now testing geant4 installation:"
module test geant4/$geant4_version
echo
