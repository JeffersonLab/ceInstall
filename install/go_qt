#!/bin/csh -f


# Making sure we use one of the supported versions:
if($1 != "$QT_VERSION" && $1 != "system") then
	echo
	echo "  Usage:  'go_qt <version>'"
	echo
	echo "  Supported Versions: "
	echo
	echo "   - $QT_VERSION"
	echo "   - system "
	echo; echo
	exit
endif

# Additional settings at the top of get_coptions
set getCoptions = $JLAB_ROOT/$JLAB_VERSION/install/get_coptions 

# Options, Screen Log, Warnings
set release  = `$getCoptions release`
set repo     = `$getCoptions repo`/qt

set system = ""
set filename = ""
if(`echo $release | grep macos | wc | awk '{print $1}'` == "1") then
	set filename = "qt-opensource-mac-x64-"$QT_VERSION".dmg"
	set system = "Mac"
else
	set filename = "qt-opensource-linux-x64-"$QT_VERSION".run"
	set system = "Linux"
endif

# if QT_VERSION is system, link to the system qt
if($1 == "system") then

	if($system == "Mac") then
	
		set brewInstallDir = "na"
		if ( -d /usr/local/Cellar ) then
			set brewInstallDir = /usr/local/Cellar
		else if ( -d  /opt/homebrew/opt ) then
			set brewInstallDir =  /opt/homebrew/opt
		else if ( -d  /opt/homebrew ) then
			set brewInstallDir =  /opt/homebrew
		endif

		set minorQtVersion = `\ls -rt $brewInstallDir/qt@5 | tail -1`
		set SQTDIR = $brewInstallDir/qt@5/$minorQtVersion
		echo
		echo System QT, version $minorQtVersion 
		echo Linking to $SQTDIR installation.
		echo

		rm -rf   $QTDIR
		mkdir -p $QTDIR

		# linking the relevant stuff
		ln -sfn $SQTDIR/lib     $QTDIR/lib
		ln -sfn $SQTDIR/include $QTDIR/include
		ln -sfn $SQTDIR/bin     $QTDIR/bin
		ln -sfn $SQTDIR/mkspecs $QTDIR/mkspecs
		ln -sfn $SQTDIR/plugins $QTDIR/plugins

	# Using system QT for Linux.
	else if($system == "Linux") then

		# explicit path to qmake
		set minorQtVersion = `/usr/lib64/qt5/bin/qmake --version | grep Qt | awk '{print $4}'`

		echo
		echo System QT, system version $minorQtVersion will be used
		echo Linking to $minorQtVersion installation.
		echo

		rm -rf   $QTDIR
		mkdir -p $QTDIR/lib

		# RedHat - Fedora - CentOS line
		if( -f /etc/fedora-release || -f /etc/redhat-release) then

			set LQTDIR = /usr/lib64        # libraries like libQt5Xml.so
			set IQTDIR = /usr/include/qt5  # includes
			set SQTDIR = $LQTDIR/qt5       # binaries, mkspecs and plugins

			# linking the relevant stuff
			# ln -sfn $LQTDIR         $QTDIR/lib
			cd $QTDIR/lib
			ln -s $LQTDIR/libQt* .

			ln -sfn $IQTDIR         $QTDIR/include
			ln -sfn $SQTDIR/bin     $QTDIR/bin
			ln -sfn $SQTDIR/mkspecs $QTDIR/mkspecs
			ln -sfn $SQTDIR/plugins $QTDIR/plugins


		# Ubuntu line NEEDS TO BE VERIFIED
		else if( -f /etc/os-release) then

			set LQTDIR = /usr/lib/x86_64-linux-gnu # libraries like libQt5Xml.so
			set IQTDIR = /usr/include/qt5      # includes
			set SQTDIR = $LQTDIR/qt5           # binaries, mkspecs and plugins

			# linking the relevant stuff
			ln -sfn $LQTDIR         $QTDIR/lib
			cd $QTDIR/lib
			ln -s $LQTDIR/libQt* .

			ln -sfn $IQTDIR         $QTDIR/include
			ln -sfn $SQTDIR/bin     $QTDIR/bin
			ln -sfn $SQTDIR/mkspecs $QTDIR/mkspecs
			ln -sfn $SQTDIR/plugins $QTDIR/plugins
		endif
	endif

	echo Done!
	echo
else
	# Using offline Installer
	echo
	echo Installing QT using the offline installer.
	echo
	echo $system detected. Downloading $filename
	echo

	$getCoptions download $repo $filename
	chmod u+x $filename

	echo
	if($system == "Mac") then
		echo open $filename
	else if($system == "Linux") then
		echo ./$filename
	endif
	echo
	echo Then follow the installation instructions. You can skip the creation of a qt account.
	echo
	echo \!\!\! WARNING WARNING WARNING \!\!\!
	echo
	echo The qt installation program will ask to verify the installation folder.
	echo Make sure to clear the default installation location and copy/parse this path instead:
	echo
	echo $JLAB_SOFTWARE/qt/$QT_VERSION
	echo
	echo Make sure to include the Source Components during the installation process.
	echo
endif


