#!/bin/zsh

# if the environment variables CCDB_HOME and CCDB_VERSION are not set, exit
if [[ -z "$CCDB_HOME" || -z "$CCDB_VERSION" ]]; then
	echo "$red > CCDB_HOME or CCDB_VERSION environment variables are not set. Exiting.$reset"
	exit 1
fi

source "$(dirname "$(readlink -f "$0")")"/functions.zsh

srepo="https://github.com/baltzell/ccdb"

base_dir=$CCDB_HOME

log_general ccdb "$CCDB_VERSION" "$filename" "$base_dir"

mkdir -p "$base_dir"
cd "$base_dir/".. || exit
rm -rf "$base_dir"
pwd
git clone  --single-branch -b "v$CCDB_VERSION" "$srepo"
cd ccdb || exit
mkdir build
cd build || exit
# on macos, echo $CCDB_HOME is /Users/maureeungaro/Software/ccdb
if [[ "$OSTYPE" == "darwin"* ]]; then
	echo "macos, setting LDFLAGS to find zstd"
	export LDFLAGS="-L$(brew --prefix zstd)/lib -L$(brew --prefix openssl)/lib"
fi

cmake -DCMAKE_INSTALL_PREFIX=../../$CCDB_VERSION ../
make -j "$n_cpu" install || exit

# temp moving include dirs until gemc uses new paths
cd "../../$CCDB_VERSION/include" || exit
mv ccdb tmp
mv tmp/* .
rm -rf tmp

echo "$magenta > CCDB installation completed.$reset"
echo
