#!/bin/zsh

# if the environment variables CCDB_HOME and CCDB_VERSION are not set, exit
if [[ -z "$CCDB_HOME" || -z "$CCDB_VERSION" ]]; then
	echo "$red > CCDB_HOME or CCDB_VERSION environment variables are not set. Exiting.$reset"
	exit 1
fi
2
what="ccdb"
what_version="$CCDB_VERSION"
base_dir="$CCDB_HOME"

source "$(dirname "$(readlink -f "$0")")"/functions.zsh

log_general "$what" "$what_version" "$srepo" "$base_dir"

# if version is less than 1.08, use the old repository
if [[ "$what_version" < "1.08" ]]; then
	srepo="https://github.com/maureeungaro/ccdb"

	mkdir -p "$base_dir"
	cd "$base_dir/".. || exit
	rm -rf "$base_dir"
	git clone --single-branch -b "v$what_version" "$srepo" "$what_version"

	unset SCONSFLAGS
	scons_build_and_install "$base_dir"

else
	srepo="https://github.com/baltzell/ccdb"
	source_dir=ccdb_source

	git clone  --single-branch -b "v$CCDB_VERSION" "$srepo" $source_dir

	cd $source_dir || exit
	mkdir build
	cd build || exit

	if [[ "$OSTYPE" == "darwin"* ]]; then
		echo "macos, setting LDFLAGS to find zstd"
		export LDFLAGS="-L$(brew --prefix zstd)/lib -L$(brew --prefix openssl)/lib"
	fi

	cmake -DCMAKE_INSTALL_PREFIX=$base_dir ../
	make -j "$n_cpu" install || exit
	cd ../../ || exit
	rm -rf $source_dir

	# temp moving include dirs until gemc uses new paths
	cd "$base_dir/include" || exit
	mv ccdb tmp
	mv tmp/* .
	rm -rf tmp
	cd ../../ || exit
fi

echo "$magenta > $what installation completed.$reset"
echo