#!/bin/csh -f

# More geant4 build options:
# http://geant4.web.cern.ch/geant4/UserDocumentation/UsersGuides/InstallationGuide/html/ch02s03.html
#
# Added qt includes manually for cmake in Linux.
#
# To compile the Geant4 Examples:
# mkdir example-b3 ; cd example-b3
# cmake -DGeant4_DIR=$G4INSTALL/lib/Geant$GEANT4_VERSION $G4INSTALL/source/Geant$GEANT4_VERSION/examples/basic/B3
# make

# Additional settings at the top of get_coptions
set getCoptions = $JLAB_ROOT/$JLAB_VERSION/install/get_coptions 

# Options
# not putting geant4 on the repo script because of the data path
set name     = geant4
set release  = `$getCoptions release`
set repo     = `$getCoptions repo`/geant4
set version  = $GEANT4_VERSION
set filename = geant$GEANT4_VERSION".tar.gz"
set opt      = `$getCoptions copt`
set blog     = `$getCoptions logFile geant4`
set blogS    = `$getCoptions logFileS geant4`

# Write options on screen
$getCoptions log $name $version $filename $release $opt

# By default data is set to off
# Getting data from jlab repository
# Because jlab farm machine are inside firewall
# and G4 data servers cannot be accessed
set DATA = 'OFF'
echo " > Geant4 Data downloading during compilation set to: "$DATA

set cdir    = (`pwd`)

if($1 == "data" || $1 == "src" || $1 == "make") then
	goto $1
endif

# data
data:
	set DATAINSTALL = $G4INSTALL/data/Geant4-$G4DATA_VERSION/data

	# get the file list manually. WARNING: This is linked to the geant4 version.
	set DATAFILES = (G4ABLA.3.1.tar.gz G4EMLOW.7.3.tar.gz G4ENSDFSTATE.2.2.tar.gz G4NDL.4.5.tar.gz G4NEUTRONXS.1.4.tar.gz G4PII.1.3.tar.gz G4PhotonEvaporation.5.2.tar.gz G4RadioactiveDecay.5.2.tar.gz G4RealSurface.2.1.tar.gz G4SAIDDATA.1.1.tar.gz)

	$getCoptions removeAndCreate $DATAINSTALL
	cd $DATAINSTALL

	echo
	echo " > Dowloading data"
	foreach df ($DATAFILES)
		$mwget $repo/geant4_data/$GEANT4_VERSION/$df
	end

	set file = (`\ls *.tar.gz`)
	echo " > Unarchiving data"
	foreach f ($file)
		echo "   - $f"
		tar zxpf $f
	end
	rm -f *.tar.gz
if($1 == "data") exit


# Source Build
src:
	# start message
	$getCoptions installLog $name $version

	# creating build and source dirs
	$getCoptions removeAndCreate $G4INSTALL/source
	$getCoptions removeAndCreate $G4INSTALL/build

	# unpacking inside source
	cd $G4INSTALL/source
	$getCoptions getAndUnpack $repo $filename
if($1 == "src") exit



# make
# build options on chapter 2 s 3
# http://geant4.web.cern.ch/geant4/UserDocumentation/UsersGuides/InstallationGuide/html/ch02s03.html
make:
	set conf_options = ""
	set x11_option   = ""
	set mt_option    = " -DGEANT4_BUILD_MULTITHREADED=ON"
	set mt_option    = " -DGEANT4_BUILD_MULTITHREADED=OFF" # comment for MT option ON

	# Linux Options
	if (`uname` == "Linux") then
		set x11_option = "-DGEANT4_USE_OPENGL_X11=ON"

		set opt1 = `echo -I$QTDIR/include -I$QTDIR/include/QtOpenGL -I$QTDIR/include/QtWidgets`
		set opt2 = `echo -I$QTDIR/include/QtGui -I$QTDIR/include/QtCore -I$QTDIR/include/QtPrintSupport`
		set opt3 = ' -W -Wall -pedantic -Wno-non-virtual-dtor -Wno-long-long -Wwrite-strings -Wpointer-arith -Woverloaded-virtual -pipe'

		# need to check if QtPrintSupport is needed
		set conf_options = "$opt1 $opt2 $opt3"
	endif

	# geant4 options
	set g4Options1 = "-DGEANT4_USE_GDML=ON -DXERCESC_ROOT_DIR=$XERCESCROOT -DGEANT4_USE_QT=ON -DQT_QMAKE_EXECUTABLE=$QTDIR/bin/qmake -DCMAKE_INSTALL_DATAROOTDIR=$G4INSTALL/data"
	set g4Options2 = "-DCLHEP_ROOT_DIR=$CLHEP_BASE_DIR -DGEANT4_INSTALL_DATA=$DATA"
	set g4Options  = "$g4Options1 $g4Options2"

	set sourceDir = $G4INSTALL/source/"geant"$GEANT4_VERSION
	set buildDir  = $G4INSTALL/build
	cd $buildDir

	# log start of compilation
	$getCoptions logStart $blog $blogS
	echo $g4Options >> $blog

	cmake $x11_option $mt_option $g4Options -DCMAKE_INSTALL_PREFIX=$G4INSTALL -DCMAKE_CXX_FLAGS="$conf_options" $sourceDir  >> $blog

	make $opt    >> $blog
	make install >> $blog

	# log end of compilation, total time
	$getCoptions logEnd  $blog
	$getCoptions logTime $blog

if($1 == "make") exit

# Cleaning up
rm -rf $G4INSTALL/build


# Done!
echo done
echo











