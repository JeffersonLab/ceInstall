#!/bin/zsh -i

# -i: interactive mode. Needed to load modules

. "$(dirname "$(readlink -f "$0")")"/functions.zsh

if [[ $# -eq 1 ]]; then
	gemc3_version=$1
else
	# error
	echo " > ERROR: No gemc3 version given. Exiting."
	exit 1
fi


echo " > gemc3_version: $gemc3_version"
echo


echo " > Checking missing modules in sim version $pv"
module unload sim
module unload gemc
module unload gemc3
module load	  gemc3/$gemc3_version

# if the above command fails, exit
if [[ $? -ne 0 ]]; then
	echo " > ERROR: module load gemc3/$gemc3_version failed. Exiting."
	exit 1
fi
echo

[ "$(moduleTestResult .clhep     $CLHEP_VERSION )"    -eq 0 ] && echo " > clhep is installed"    || install_clhep
[ "$(moduleTestResult .xercesc   $XERCESC_VERSION )"  -eq 0 ] && echo " > xercesc is installed"  || install_xercesc
[ "$(moduleTestResult .qt        $QT_VERSION)"        -eq 0 ] && echo " > qt is installed"       || copy_qt
[ "$(moduleTestResult .g4data    $G4_VERSION)"        -eq 0 ] && echo " > g4data is installed"   || install_geant4_data
[ "$(moduleTestResult .geant4    $G4_VERSION)"        -eq 0 ] && echo " > geant4 is installed"   || install_geant4
[ "$(moduleTestResult .scons_bm  $SCONS_BM_VERSION)"  -eq 0 ] && echo " > scons_bm is installed" || install_scons_bm
[ "$(moduleTestResult .glibrary  $GLIBRARY_VERSION)"  -eq 0 ] && echo " > glibrary is installed" || install_glibrary
[ "$(moduleTestResult gemc3      $GEMC3_VERSION)"     -eq 0 ] && echo " > gemc3 is installed"    || install_g3
[ "$(moduleTestResult .scig      $SCIG_VERSION)"      -eq 0 ] && echo " > scig is installed"     || install_scig


echo
module test gemc3/$gemc3_version

echo
