#!/bin/zsh

# if the environment variables HIPO and HIPO_VERSION are not set, exit
if [[ -z "$HIPO" || -z "$HIPO_VERSION" ]]; then
	echo "$red > HIPO or HIPO_VERSION environment variables are not set. Exiting.$reset"
	exit 1
fi

what="hipo"
what_version="$HIPO_VERSION"
base_dir="$HIPO"
grepo="https://github.com/gavalian/hipo"
source_dir=hipo_source
tmp_root_dir=/root

source "$(dirname "$(readlink -f "$0")")"/functions.zsh
log_general "$what" "$what_version" "$grepo" "$base_dir"


# if we are in a docker container temp hiding root
if [[ -n "$AUTOBUILD" ]]; then
	echo "$magenta > Running in a docker container. Temp hiding /usr/share/root by moving it $reset"
	mv /usr/share/root/ $tmp_root_dir
fi

git clone --recurse-submodules --single-branch -b $what_version "$grepo" $source_dir
cd $source_dir || exit

cd  lz4
make  PREFIX=$base_dir CFLAGS='-fPIC' install || exit
cd  ..

mkdir build
cd build || exit

cmake -DCMAKE_INSTALL_PREFIX=$base_dir ../
make -j "$n_cpu" install || exit
cd ../../ || exit
rm -rf $source_dir

# backward compatibility: copying includes
cp -r $base_dir/include/hipo4 $base_dir
cp $base_dir/include/*.h $base_dir/hipo4

# if we are in a docker container restoring root
if [[ -n "$AUTOBUILD" ]]; then
	echo "$magenta > Running in a docker container. Restoring /usr/share/root $reset"
	mv $tmp_root_dir/root /usr/share/root/
fi

echo "$magenta > $what installation completed.$reset"
module test hipo/$what_version
exit $?

