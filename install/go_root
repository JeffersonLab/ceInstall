#!/bin/csh -f

# At JLab Robert Michaels is taking care of the ROOT installation
# chgrp -R 12gev_phys root
# chmod -R 775 root

# Additional settings at the top of get_coptions
source get_coptions env
set getCoptions = $JLAB_ROOT/$JLAB_VERSION/install/get_coptions 

 # Options
set name     = root
set release  = `./get_coptions release`
set repo     = `./get_coptions repo`/root
set version  = $ROOT_VERSION
set filename = "root_v"$ROOT_VERSION".source.tar.gz"
set arch     = `./get_coptions arch`
set opt      = `./get_coptions copt`
set blog     = `./get_coptions logFile root`
set blogS    = `./get_coptions logFileS root`

# Write options on screen
./get_coptions log $name $version $filename $release $arch $opt

# write permissions for JLab 12gev group
if($1 == "perm") then
	cd $JLAB_SOFTWARE
	mkdir root
	chgrp -R 12gev_phys root
	chmod -R 775 root
	exit
endif

set ROOTSOURCE = "$JLAB_SOFTWARE/root/root-$ROOT_VERSION"
set ROOTBUILD  = "$JLAB_SOFTWARE/root/root-$ROOT_VERSION-build"

if($1 == "src"|| $1 == "make") then
	goto $1
endif

# Source Build
src:

	# start message
	$getCoptions installLog $name $version

	# creating build and source dirs
	$getCoptions removeAndCreate $ROOTSYS
	$getCoptions removeAndCreate $ROOTSOURCE
	$getCoptions removeAndCreate $ROOTBUILD

	# unpacking inside source
	cd $JLAB_SOFTWARE/root
	$getCoptions getAndUnpack $repo $filename
if($1 == "src") exit

# notes: ROOT switched to cmake
make:

	# disabling stuff we don't need, enabling stuff we want
	set disablePackages = ("alien" "asimag" "bonjour" "builtin_afterimage" "castor" "chirp" "dcache" "fitsio" "gfal" "glite" "hdfs" "krb5" "odbc" "sapdb" "shadowpw" "srp")
	set enablePackages = ("roofit" "minuit2" "python" )
	set toDisable = ""
	set toEnable = ""
	foreach p ($disablePackages)
		set toDisable="$toDisable -D$p=OFF"
	end
	foreach p ($enablePackages)
		set toEnable="$toEnable -D$p=ON"
	end


	cd $ROOTBUILD
	# log start of compilation
	$getCoptions logStart $blog $blogS


	cmake -DCMAKE_INSTALL_PREFIX=$ROOTSYS $toDisable $toEnable $ROOTSOURCE >> $blog

	make $opt    >> $blog
	make install >> $blog

	# log end of compilation, total time
	$getCoptions logEnd  $blog
	$getCoptions logTime $blog

if($1 == "make") exit

# Cleaning up
echo " > Cleaning up..."
rm -rf $ROOTSYS/root

# Done
echo " > Done."
echo









