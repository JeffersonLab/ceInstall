#%Module

#conflict gemc

module load sim/$env(SIM_VERSION)
module load .scons_bm/${scons_bm_version}
module load --not-req ccdb/${ccdb_version}
module load .evio/${evio_version}
module load .mlibrary/${mlibrary_version}
module load hipo
module load --not-req .driftchambers/${driftchambers_version}
module load .cmag/${cmag_version}

# 0.0 is a special tag indicating no need to load banks
if { $banks_version != "0.0" } {
    module load .banks/${banks_version}
}

# Environment
set base_dir $env(SIM_INSTALLATION_DIR)

set noarch_dir $env(SIM_HOME)/noarch
setenv FIELD_DIR $noarch_dir/data/magfield


# if major $version is 2, then it is gemc2, otherwise it's clas12Tags
if { [ lindex [ split $version . ] 0 ] == 2 } {
    setenv GEMC_VERSION      $version
    setenv GEMC_BASE_DIR     $base_dir/gemc2
    setenv GEMC              $base_dir/gemc2/${version}
    prepend-path PATH        $base_dir/gemc2/${version}
} else {
    setenv CLAS12TAG_VERSION  $version
    setenv CLAS12TAG_BASE_DIR $base_dir/clas12Tags
    setenv GEMC               $base_dir/clas12Tags/${version}/source
    setenv GEMC_DATA_DIR      $base_dir/clas12Tags/${version}
    prepend-path PATH         $base_dir/clas12Tags/${version}/source
}



if { $version eq "5.4" || $version eq "5.5" || $version eq "5.6" || $version eq "5.7" || $version eq "5.8"} {
	puts stderr "Warning: gemc $version is deprecated. Use 5.10 instead."
}

proc ModulesTest { } {

	set installation_exe  [ getenv GEMC ]/gemc
	set retcode 1

	puts stderr ""
	if { [file isfile $installation_exe ] } {
		puts stderr " Y GEMC $installation_exe"
	} else {
		puts stderr " N GEMC $installation_exe"
		set retcode 0
	}

	return $retcode
}

