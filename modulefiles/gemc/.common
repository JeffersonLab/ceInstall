#%Module4.5

conflict gemc

module load .osrelease
module load .clhep/${clhep_version}
module load .xercesc/${xercesc_version}
module load .qt/${qt_version}
module load .g4data/${geant4_version}
module load .geant4/${geant4_version}
module load .scons_bm/${scons_bm_version}
module load .ccdb/${ccdb_version}
module load .evio/${evio_version}
module load .mlibrary/${mlibrary_version}
module load .hipo/${hipo_version}
module load .cmag/${cmag_version}

if { $banks_version != "0.9" } {
    module load .banks/${banks_version}
}

# Environment

set base_dir $env(SIM_HOME)/$env(OSRELEASE)/$env(SIM_SUB_DIR)/$env(SIM_VERSION)
set noarch_dir $env(SIM_HOME)/noarch
setenv FIELD_DIR $noarch_dir/data


# if major $version is 2, then it is gemc2, otherwise it's clas12Tags
if { [ lindex [ split $version . ] 0 ] == 2 } {
    setenv GEMC_VERSION      $version
    set dir $base_dir/gemc2/${version}
    setenv GEMC_BASE_DIR     $base_dir/gemc2
    setenv GEMC              $base_dir/gemc2/${version}
    prepend-path PATH        $dir
} else {
    setenv CLAS12TAG_VERSION $version
    set dir $base_dir/clas12Tags/${version}
    setenv CLAS12TAG_BASE_DIR $base_dir/clas12Tags
    setenv GEMC               $base_dir/clas12Tags/${version}/source
    setenv GEMC_DATA_DIR      $dir
    prepend-path PATH $dir/source
}



proc ModulesTest { } {
	
	global SIM_VERSION
	global banks_version
	set retcode 1

	set command [module-info command]
	set is_loaded [module-info loaded gemc]

	# exit if is_loaded is empty
	if { $is_loaded == "" } {
		puts stderr "module 'gemc' is not loaded. Use 'module load gemc/<version>'' to load it."
		puts stderr ""
		return 0
	}

	set dirs_to_test {     CLHEP_BASE_DIR XERCESCROOT QTDIR G4LEDATA G4LIB SCONS_BM CCDB_HOME EVIO MLIBRARY HIPO C12BFIELDS }
	if { $banks_version != "0.9" } {
	    set dirs_to_test { CLHEP_BASE_DIR XERCESCROOT QTDIR G4LEDATA G4LIB SCONS_BM CCDB_HOME EVIO MLIBRARY HIPO C12BFIELDS BANKS }
    }

	set missing {}

	puts stderr " Running $command for $is_loaded "

	puts stderr ""
	foreach dir $dirs_to_test {
		set installation_dir  [ getenv $dir ]
		if { [file isdirectory $installation_dir ] } {
			if { $dir == "CLHEP_BASE_DIR" } {
				puts stderr " Y $dir \t $installation_dir"
			} else {
				puts stderr " Y $dir \t\t $installation_dir"
			}
		} else {
			if { $dir == "CLHEP_BASE_DIR" } {
				puts stderr " N $dir \t $installation_dir"
			} else {
				puts stderr " N $dir \t\t $installation_dir"
			}
			set missing [ linsert $missing end $dir ]
			set retcode 0
		}
	}

	set installation_dir  [ getenv GEMC ]
    set installation_exe  $installation_dir/gemc
    if { [file isfile $installation_exe ] } {
	    puts stderr " Y gemc \t\t $installation_exe"
    } else {
        puts stderr " N gemc \t\t $installation_exe"
		set missing [ linsert $missing end gemc ]
	    set retcode 0
    }

	puts stderr ""
	if { $missing != "" } {
		puts stderr " Modules Missing: $missing"
		puts stderr ""
	}
	
	return $retcode
}

