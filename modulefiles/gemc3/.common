#%Module4.5

conflict gemc3

module load .osrelease
module load .clhep/${clhep_version}
module load .xercesc/${xercesc_version}
module load .qt/${qt_version}
module load .g4data/${geant4_version}
module load .geant4/${geant4_version}
module load .scons_bm/${scons_bm_version}
module load .glibrary/${glibrary_version}
module load .scig/${scig_version}



# Environment

set base_dir $env(SIM_HOME)/$env(OSRELEASE)/$env(SIM_SUB_DIR)/$env(SIM_VERSION)
set dir $base_dir/gemc3/${version}

setenv GEMC3_BASE_DIR $base_dir/gemc3
setenv GEMC3_VERSION  $version

setenv GEMC       $dir
prepend-path PATH $dir

proc ModulesTest { } {
	
	global SIM_VERSION
	set retcode 1

	set command [module-info command]
	set is_loaded [module-info loaded gemc3]

	# exit if is_loaded is empty
	if { $is_loaded == "" } {
		puts stderr "gemc3 is not loaded. Use 'module load gemc3/<version> to load it."
		puts stderr ""
		return 0
	}

	set dirs_to_test { CLHEP_BASE_DIR XERCESCROOT QTDIR G4LEDATA G4LIB SCONS_BM GLIBRARY SCIG }
	set missing {}

	puts stderr " Running $command for $is_loaded "

	puts stderr ""
	foreach dir $dirs_to_test {
		set installation_dir  [ getenv $dir ]
		if { [file isdirectory $installation_dir ] } {
			if { $dir == "CLHEP_BASE_DIR" } {
				puts stderr " Y $dir \t $installation_dir"
			} else {
				puts stderr " Y $dir \t\t $installation_dir"
			}
		} else {
			if { $dir == "CLHEP_BASE_DIR" } {
				puts stderr " N $dir \t $installation_dir"
			} else {
				puts stderr " N $dir \t\t $installation_dir"
			}
			set missing [ linsert $missing end $dir ]
			set retcode 0
		}
	}

	set installation_dir  [ getenv GEMC ]
    set installation_exe  $installation_dir/gemc
    if { [file isfile $installation_exe ] } {
	    puts stderr " Y gemc \t\t $installation_exe"
    } else {
        puts stderr " N gemc \t\t $installation_exe"
		set missing [ linsert $missing end gemc ]
	    set retcode 0
    }

	puts stderr ""
	if { $missing != "" } {
		puts stderr " Modules Missing: $missing"
		puts stderr ""
	}
	
	return $retcode
}

