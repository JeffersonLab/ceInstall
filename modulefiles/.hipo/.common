#%Module4.5

# This sets both HIPO and DRIFTCHAMBERS
#conflict .hipo

# Environment

if { ! [info exist ::env(SIM_VERSION)]  }  {
	puts stderr " ERROR: SIM_VERSION not set. Load module sim or gemc first"
	exit 1
}

set base_dir $env(SIM_HOME)/$env(OSRELEASE)/$env(SIM_SUB_DIR)/$env(SIM_VERSION)

set dirh $base_dir/hipo/${version}

setenv HIPO_VERSION $version
setenv HIPO $dirh

prepend-path PYTHONPATH $dirh/extensions/python

prepend-path LD_LIBRARY_PATH $dirh/lib
prepend-path LD_LIBRARY_PATH $dirh/slib


set dird $base_dir/driftchambers/${version}
setenv DRIFTCHAMBERS $dird

if { [uname sysname] == "Darwin" } {
	setenv DYLD_LIBRARY_PATH $env(LD_LIBRARY_PATH)
}

proc ModulesTest { } {
	
	set var HIPO
	set installation_dir [ getenv HIPO ]/lib
	set retcode 1
	set hipo_version [ getenv HIPO_VERSION ]

	puts stderr ""
	if { [file isdirectory $installation_dir ] } {
		puts stderr " Y $var \t\t $installation_dir"
	} else {
		puts stderr " N $var \t\t $installation_dir"
		set retcode 0
	}

    # if version is 2.1 or higher, check for denoise2.exe
    if { [string first "2.1" $hipo_version] != -1 } {
        set var DENOISE
	    set installation_exe [ getenv DRIFTCHAMBERS ]/install/bin/denoise2.exe

	    if { [file isfile $installation_exe ] } {
		    puts stderr " Y $var \t\t $installation_exe"
	    } else {
		    puts stderr " N $var \t\t $installation_exe"
		    set retcode 0
	    }
	}





	return $retcode
}

