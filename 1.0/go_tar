#!/bin/tcsh -f

# First argument is package name
# Second argument is version

if($#argv != 2) then
	echo " "
	echo "Usage:   "
	echo  "  >> go_tar package version"
	echo " "
	exit 0
endif


set pname   = $1
set pver    = $2
set remoted = "ftp:/u/group/12gev_phys/www/packages/sources"
set locald  = /opt/projects

echo
echo " Package: " $pname ", version: " $pver
echo


# common environment
# The production version is hard copy of
# a svn version
if($pname == "ceInstall") then
	cd $locald/ceInstall
	rm -f ceInstall_$pver.*
	tar cvf ceInstall_$pver.tar $pver --exclude="go_tar" --exclude="doc" --exclude=".DS_Store"
	gzip ceInstall_$pver.tar
	scp ceInstall_$pver.tar.gz $remoted/ceInstall
endif


# scons scripts
	if($pname == "bm") then
	cd $locald/scons_bm/releases/
	rm -rf scons_bm-$pver.*
	tar cvf scons_bm-$pver.tar $pver/*
	gzip scons_bm-$pver.tar
	scp scons_bm-$pver.tar.gz $remoted
endif


# evio
if($pname == "evio") then
	cd $locald/evio/releases/$pver
	scons -c ; rm -rf lib bin
	cd ..
	rm -rf evio-$pver.*
	tar cvf evio-$pver.tar $pver/*
	gzip evio-$pver.tar
	scp evio-$pver.tar.gz $remoted
endif


# gemc
if($pname == "gemc") then
	if($pver == "1.8") then
		cd $locald/gemc/$pver
		scons -c ;
		cd ../
	else
		cd $locald/gemc/$pver/source
		scons -c ;
		cd ../../
	endif
	rm -rf gemc-$pver.*
	tar cvf gemc-$pver.tar $pver/*
	gzip gemc-$pver.tar
	scp gemc-$pver.tar.gz $remoted/gemc
endif

# banks
if($pname == "banks") then
	cd $locald/banks/releases/$pver
	setenv BANKS `pwd`
	scons -c ;
	cd ../
	rm -rf banks-$pver.*
	tar cvf banks-$pver.tar $pver/* --exclude="banks.xcodeproj" --exclude="lib"
	gzip banks-$pver.tar
	scp banks-$pver.tar.gz $remoted/banks
endif

# gemc_evio2root
if($pname == "gemc_evio2root") then
	cd $locald/gemc_evio2root/
	scons -c ;
	rm -rf gemc_evio2root.tar.gz
	tar cvf gemc_evio2root.tar * --exclude="evio2root" --exclude="make_log"
	gzip gemc_evio2root.tar
	scp gemc_evio2root.tar.gz $remoted/gemc_evio2root
endif


echo
echo


