#!/bin/csh -f

# Options
set name     = qt4
set release  = `./get_coptions release`
set repo     = `./get_coptions repo`/qt
set version  = $QT_VERSION
set filename = qt-everywhere-opensource-src-$QT_VERSION".tar.gz"
set arch     = `./get_coptions arch`
set opt      = `./get_coptions copt`
./get_coptions log $name $version $filename $release $arch $opt 
 
# Special Compilation options
set flags = ""
set oarch = ""
if($arch == "32") then
	set oarch = '-platform linux-g++-32'
endif
# Special flags for mac. Starting with 4.8.0 
# the option -platform macx-g++42 can be replaced by
# -platform macx-g++
if(`uname` == "Darwin") then
    set flags = "-platform macx-g++ -cocoa  -I/sw/include -L/sw/lib"
		echo " > Special Darwin Compilation Options: " $flags 
  if($arch == "32") then
		set oarch = '-arch x86'
	endif
endif
# Checking if the OS is 32 bit. 
echo " > Special Compilation Options: " $oarch 
echo


set dirname  = (`echo $filename | awk -F\.tar '{print $1}'`)

# Check that MYSQL is there
if( ! -d $MYSQLIB) then
	echo MYSQL is not found. Exiting.
	exit
endif


if($1 == "src"|| $1 == "make") goto $1


# Source Build
src:
	# Getting source file
	echo " > Installing qt4 version "$version" - release "$release". Getting and unpacking" $filename"..."
	rm -rf   $QTDIR
	mkdir -p $QTDIR

	# Getting and unpacking file.
	# For QT, we need source dir different than destination dir
	# It also cannot be inside installation dir
	cd $QTDIR/../
	rm -f       $filename
	wget  $repo/$filename
	tar -zxpvf  $filename > /dev/null
if($1 == "src") exit


# make
make:
	# Configuring and Compiling
	echo " > Configuring and compiling qt4 source (log will be in "\$QTDIR/"make_log)..."
	cd $QTDIR/../$dirname
	echo "yes" | ./configure -opengl  -no-cups -no-phonon -prefix $QTDIR \
	-qt-sql-mysql -no-exceptions -opensource -release -I $MYSQINC -L $MYSQLIB  \
	-no-dwarf2 -no-dbus -no-svg -no-accessibility -nomake demos -nomake examples -no-qt3support \
	-no-audio-backend -no-javascript-jit $flags $oarch > $QTDIR/make_log

	make $opt         >> $QTDIR/make_log
	make $opt install >> $QTDIR/make_log
if($1 == "make") exit

# cleaning
cd ..
rm -rf $filename
rm -rf $dirname

# Done!
echo done
echo






