#!/bin/csh -f


if($1 == "release"|| $1 == "copt" || $1 == "arch" || $1 == "log"  || $1 == "repo" || $1 == "dir" || $1 == "env" || $1 == "cmakev") then
	goto $1
endif

# Additional environment
env:
	alias wget "wget --no-check-certificate"
if($1 == "env") exit


# Release
release:
	set release  = (`../ce/osrelease.pl`)
	# overwriting OSRELEASE if user want to
	if($OSRELEASE != $release) then
		set release = $OSRELEASE
	endif
	echo $release
if($1 == "release") exit


# Multithread compilation
copt:
	set opt   = ""
	if(`uname` == "Darwin") set ncpu = `sysctl -a hw | grep activecpu | awk '{print $2}'`
	if(`uname` == "Linux")  set ncpu = `grep processor /proc/cpuinfo | wc | awk '{print $1}'`
	set opt = " -j"$ncpu" "

	# limiting max parallel compilation to 24
	# just in case there are local limits (for example, some JLab nodes)
	if($ncpu > 24) then
		set opt = " -j24"
	endif

	echo $opt
if($1 == "copt") exit


# 32 or 64 bit
arch:
set is_32bit = (`echo $OSRELEASE | grep -v x86_64 | grep 86 | wc | awk '{print $1}'`)
	if($is_32bit == "1") echo 32
	if($is_32bit == "0") echo 64
if($1 == "arch") exit

# Log to screen
log:
	echo
	echo " > " $2 " < "
	echo
	echo " > Version:                 " $3
	echo " > Filename:                " $4
	echo " > Release:                 " $5
	echo " > Architecture:            " $6
	echo " > Multithread Compilation: " $7
	echo
if($1 == "log") exit


# Web Directory where all the sources are located
repo:
	echo  "https://www.jlab.org/12gev_phys/packages/sources"
if($1 == "repo") exit


# JLAB FTP Directory where all the sources are located
dir:
	echo  "/u/group/12gev_phys/www/packages/sources"
if($1 == "dir") exit




# check the cmake version
# Issue warning if it's not >= 3.3
cmakev:
	set cmake_version     = `cmake --version | head -1 | awk '{print $3}' | awk -F- '{print $1}' | awk -F. '{print $1"."$2}'`
	if( `echo "$cmake_version < 3.3" | bc `) then
		echo cmake version is $cmake_version, 3.3 or higher is needed
	else
		echo OK
	endif
if($1 == "cmakev") exit

