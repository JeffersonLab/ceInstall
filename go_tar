#!/bin/tcsh -f

# First argument is package name
# Second argument is version

set pname   = $1
set pver    = $2
set option  = $3  # option local to use the local repo instead of a git tag
set remoted = "ftp.jlab.org:/u/group/12gev_phys/www/packages/sources"
set locald  = /opt/projects

if($1 == "g4data")  then
	goto $1
endif

if($#argv != 2 && $#argv != 3) then
	echo " "
	echo "Usage:   "
	echo  "  >> go_tar version [option]"
	echo " "
	exit 0
endif


# delete, make dir and cd to it
# defined in myenv but we do not source it here (-f option to this script)
alias mcd 'rm -rf \!*; mkdir -p \!* ; cd \!*'

echo
echo " Package: " $pname ", version: " $pver
echo

set exT1  = '--exclude=.git'
set exT2  = '--exclude=releaseScheme.key'
set exT3  = '--exclude=.sconsign.dblite'
set exT4  = '--exclude=.DS_Store'
set exT5  = '--exclude=doc'
set exT6  = '--exclude=.gitignore'
set exT7  = '--exclude=go_tar'
set exT8  = '--exclude=.entitlements'
set exT9  = '--exclude=lib'
set exT10 = '--exclude=bin'
set exT11 = '--exclude=external'
set exT12 = '--exclude=template\_install.html'

set excludeFromTar = $exT1" "$exT2" "$exT3" "$exT4" "$exT5" "$exT6" "$exT7" "$exT8" "$exT9" "$exT10" "$exT11" "$exT12

# common environment
if($pname == "ceInstall") then

	# to use local disk version for a release
	if($option == "local") then
		cd $locald
		rm -f ceInstall_$pver.*
		tar cvf ceInstall_$pver.tar  -L $excludeFromTar ceInstall
		gzip ceInstall_$pver.tar
		scp ceInstall_$pver.tar.gz $remoted/ceInstall
		rm -f ceInstall_$pver.*
	else
		mcd $locald/ceInstall/tmp
		wget -qc --show-progress https://github.com/JeffersonLab/ceInstall/archive/v$pver".tar.gz" -O ceInstall_$pver.tar.gz
		scp ceInstall_$pver.tar.gz $remoted/ceInstall
		cd ..
		rm -rf tmp
	endif

	cd $locald/ceInstall

	# html instructions: these are the ones in the local dir, not coming from the git release
	rm -f sbsInstall/$pver"_install.html"
	sed "s/vvversiontoreplaceee/$pver/g" sbsInstall/template_install.html > sbsInstall/$pver"_install.html"
	scp sbsInstall/* sbsInstall/.jlab_software $remoted/ceInstall/

	# main scripts: these are the ones in the local dir, not coming from the git release
	#scp softenv.* ftp.jlab.org:/site/12gev_phys

	exit
endif


# scons scripts
if($pname == "bm") then
	# to use local disk version for a release
	if($option == "local") then
		cd $locald
		rm -f scons_bm_$pver.tar.gz
		tar cvf scons_bm_$pver.tar  -L $excludeFromTar scons_bm
		gzip scons_bm_$pver.tar
		scp scons_bm_$pver.tar.gz $remoted/scons_bm
		rm -f scons_bm_$pver.tar.gz
	else
		mcd $locald/scons_bm/tmp
		wget -qc --show-progress https://github.com/maureeungaro/scons_bm/archive/v$pver".tar.gz" -O scons_bm_$pver.tar.gz
		scp scons_bm_$pver.tar.gz $remoted/scons_bm
		cd ..
		rm -rf tmp
	endif
	exit
endif


# Additional settings at the top of get_coptions
# Get evio from here:
# https://coda.jlab.org/drupal/content/event-io-evio
# then replace the SConstruct there with the old $EVIO/SConstruct and re-pack with (one dir up)
# At this point the stuff installed on disk is different than the CODA evio releases
if($pname == "evio") then
	cd $JLAB_SOFTWARE/evio/$pver
	scons -c ; rm -rf lib bin
	cd ..
	rm -rf evio-$pver.*
	tar cvf  evio-$pver.tar --exclude="java" $excludeFromTar $pver/*
	gzip evio-$pver.tar
	scp evio-$pver.tar.gz $remoted/evio
	exit
endif

# gemc
# copying API in gemc
# notice the github tag has _ but we turned it into -
if($pname == "gemc") then
	# development is automatically local
	if($pver == "devel") then
		cd $GEMC
		scons -c
		cd $locald/gemc/releases/
		rm -rf devel ; cp -r ../source devel
		rm -f gemc-devel.tar.gz
		tar cvf gemc-devel.tar -L $excludeFromTar devel
		gzip gemc-devel.tar
		scp gemc-devel.tar.gz $remoted/gemc
		rm -f gemc-devel.tar.gz
	else
		mcd $locald/gemc/tmp
		wget -qc --show-progress https://github.com/gemc/source/archive/v$pver.tar.gz -O gemc_$pver.tar.gz
		tar -zxpvf gemc_$pver.tar.gz
		rm gemc_$pver.tar.gz
		cd source-$pver
		cp -r $locald/gemc/api .
		cd ..
		tar cvf gemc-$pver.tar source-$pver
		gzip gemc-$pver.tar
		scp gemc-$pver.tar.gz $remoted/gemc
		cd ..
		rm -rf tmp
	endif
	exit
endif

# banks
if($pname == "banks") then
	if($option == "local") then
		cd $BANKS
		scons -c
		cd $locald
		rm -f banks_$pver.tar.gz
		tar cvf banks_$pver.tar  -L $excludeFromTar banks
		gzip banks_$pver.tar
		scp banks_$pver.tar.gz $remoted/banks
		rm -f banks_$pver.tar.gz
	else
		mcd $locald/banks/tmp
		wget -qc --show-progress https://github.com/maureeungaro/banks/archive/v$pver".tar.gz" -O banks_$pver.tar.gz
		scp banks_$pver.tar.gz $remoted/banks
		cd ..
		rm -rf tmp
	endif
	exit
endif


# mlibrary
# notice: cadmesh from github "master" is not compiling properly.
if($pname == "mlibrary") then
	# development is automatically local
	if($pver == "devel") then
		cd $locald/mlibrary
		scons -c
		rm -rf cadmeshBuild bin lib
		cd $locald
		rm -f mlibrary_$pver.*
		tar cvf mlibrary_$pver.tar -L $excludeFromTar mlibrary
		gzip mlibrary_$pver.tar
		scp mlibrary_$pver.tar.gz $remoted/mlibrary
		rm -f mlibrary_$pver.*
	else
		mcd $locald/mlibrary/tmp
		wget -qc --show-progress https://github.com/gemc/mlibrary/archive/v$pver".tar.gz" -O mlibrary_$pver.tar.gz
		scp mlibrary_$pver.tar.gz $remoted/mlibrary
		cd ..
		rm -rf tmp
	endif
	exit

endif

# glibrary
if($pname == "glibrary") then
	mcd $locald/gemc/glibrary/tmp
	wget -qc --show-progress https://github.com/gemc/glibrary/archive/$pver".tar.gz" -O glibrary_$pver.tar.gz
	scp glibrary_$pver.tar.gz $remoted/glibrary
	cd ..
	rm -rf tmp
	exit

endif
echo
echo
exit






g4data:

	# data is downloaded to Downloads from the geant4 downloads, but in the process (mac) it's unzipped
	# this will move the G4 files onto a tmp dir in downloads, zip them and copy them to the proper dir

	cd /Users/ungaro/Downloads
	mkdir -p tmp
	mv G4* tmp


	cd /Users/ungaro/Downloads/tmp

	# checking number of files
	set nFiles = `\ls | wc | awk '{print $1}'`
	if($nFiles != "12") then
		echo
		echo Error: we should have 11 files but we have $nFiles
		echo
		exit
	endif

	foreach f (`ls`)
		echo gzipping $f
		gzip $f
	end


	set G4DATAVERSION = 4.10.07.p02

	cd /Users/ungaro/Downloads
	mv tmp $G4DATAVERSION
	scp -r $G4DATAVERSION $remoted"/geant4_data/"
if($1 == "g4data") exit



