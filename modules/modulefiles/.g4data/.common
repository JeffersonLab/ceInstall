#%Module4.8

#conflict .g4data

# Environment

if { ! [info exist ::env(SIM_VERSION)]  }  {
	puts stderr " ERROR: SIM_VERSION not set. Load module sim or gemc first"
	exit 1
}

set base_dir $env(SIM_HOME)/$env(OSRELEASE)/$env(SIM_SUB_DIR)/$env(SIM_VERSION)

set dir $base_dir/geant4/${version}

setenv G4DATA_DIR $dir/data/$data_version/data

# data

setenv G4NEUTRONHPDATA   $env(G4DATA_DIR)/G4NDL$env(g4ndl_version)
setenv G4LEDATA          $env(G4DATA_DIR)/G4EMLOW$env(g4emlow_version)
setenv G4LEVELGAMMADATA  $env(G4DATA_DIR)/PhotonEvaporation$env(g4photonevaporation_version)
setenv G4RADIOACTIVEDATA $env(G4DATA_DIR)/RadioactiveDecay$env(g4radioactivedecay_version)
setenv G4SAIDXSDATA      $env(G4DATA_DIR)/G4SAIDDATA$env(g4saidata_version)
setenv G4PARTICLEXSDATA  $env(G4DATA_DIR)/G4PARTICLEXS$env(g4particlexs_version)
setenv G4ABLADATA        $env(G4DATA_DIR)/G4ABLA$env(g4abla_version)
setenv G4INCLDATA        $env(G4DATA_DIR)/G4INCL$env(g4incl_version)
setenv G4PIIDATA         $env(G4DATA_DIR)/G4PII$env(g4pii_version)
setenv G4ENSDFSTATEDATA  $env(G4DATA_DIR)/G4ENSDFSTATE$env(g4ensdfstate_version)
setenv G4REALSURFACEDATA $env(G4DATA_DIR)/RealSurface$env(g4real_surface_version)


proc ModulesTest { } {
	
	set var Geant4_Data
	set installation_dir  [ getenv G4LEDATA ]
	set retcode 1

	if { [file isdirectory $installation_dir ] } {
		puts stderr " Y $var $installation_dir"
	} else {
		puts stderr " N $var $installation_dir"
		set retcode 0
	}
	
	return $retcode
}

