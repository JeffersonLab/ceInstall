#%Module######################

conflict physlibs

set PHYS_VERSION $env(PHYS_VERSION)

if { ! [info exist ::env(PHYS_SUB_DIR)]  }  {
  setenv PHYS_SUB_DIR sim
}

# example of adding software to a specific release
# In the ModulesHelp below one can just add
#    global newlib_version_log
#    $newlib_version_log
# if { [info exist ::newlib_version ]  }  {
#    set newlib_version_log "- newlib_version: $newlib_version"
#   } else {
#    set newlib_version_log ""
#}


module load .clhep/${clhep_version}
module load .xercesc/${xercesc_version}
module load .qt/${qt_version}
module load .geant4/${geant4_version}
module load .scons_bm/${scons_bm_version}
module load .ccdb/${ccdb_version}
module load .evio/${evio_version}
module load .mlibrary/${mlibrary_version}

# couldn't figure out how to run the individual modules tests within this function
# so running all tests here
proc ModulesTest { } {

    global PHYS_VERSION

    set retcode 1

    set dirs_to_test { CLHEP_BASE_DIR XERCESCROOT QTDIR G4INSTALL SCONS_BM CCDB_HOME }

    puts stderr "Running ModulesTest for PHYS_VERSION $PHYS_VERSION..."

    puts stderr ""
    foreach dir $dirs_to_test {
        if { [file isdirectory [ getenv $dir ] ] } {
            puts stderr " ✅ $dir "
        } else {
            puts stderr " ❌ $dir  ︎"
            set retcode 0
        }
    }
    puts stderr ""

    return $retcode
}

